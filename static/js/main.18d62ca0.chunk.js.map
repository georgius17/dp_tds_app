{"version":3,"sources":["Components/Dashboard/Dashboard.module.css","Components/Dashboard/DataModal/DataModal.module.css","Components/Toolbar/Toolbar.js","Components/Login/LoginPage.js","Resources/Resources.js","Components/Constants/SensorConstants.js","Components/Constants/ObjectConstants.js","Components/Dashboard/DataModal/DataModal.js","Components/Dashboard/JSONConverter.js","Components/Dashboard/UploadedData/UploadedData.js","Components/Dashboard/DataMap/DataMap.js","Components/Dashboard/DataTable/DataTable.js","Components/Dashboard/DataOptions/DataOptions.js","Components/Dashboard/TimeGenerator.js","Components/Dashboard/ExportCSV/ExportCSV.js","Components/Dashboard/Dashboard.js","Routes/Routes.js","App.js","reportWebVitals.js","index.js","Components/Dashboard/UploadedData/UploadedData.module.css"],"names":["module","exports","Toolbar","props","Navbar","expand","variant","Brand","to","LoginPage","Row","className","Form","Group","Label","Control","type","placeholder","Button","Resources","Graph","Table","Map","Delete","Export","ChangeData","Options","Add","Doughnut","Line","Bar","AddTitle","AddNote","Title","Note","SelectY","SelectX","SelectColorY","SelectColorX","CloseModal","Success","Error","SensorConstants","Values","tds_values","temp_values","location_values","time_values","id_values","date_values","ObjectConstants","DataModal","sensorData","data","React","showDataindex","setShowDataindex","dataCut","setDataCut","deletePreviousData","setDeletePreviousData","tableDataCount","setTableDataCount","x","y","chosenAxes","setChosenAxes","undefined","length","Modal","classes","divModal","show","Header","closeButton","objectID","Body","Dropdown","Toggle","id","Menu","map","i","index","Item","onClick","indexOf","InputGroup","Prepend","Text","FormControl","aria-label","aria-describedby","value","onChange","e","target","dataLengths","push","min","Math","dataCutReminder","onTextChanged","objectData","title","size","note","objectType","onDataChange","coords","Number","slice","console","log","mutateLocationData","xLabel","Object","keys","prevState","color","onSetColor","hex","yLabel","checked","selectedFile","uploadedRows","startIndex","rows","gps","tds","temp","time","GPS","TDS","TEMP","DATE","mutateTableRows","Footer","onClose","JSONConverter","file","output","GPS_temp","TEMP_temp","TDS_temp","DATE_temp","numbers","j","includes","index_TDS","k","UploadedData","Col","md","span","divData","divItem","DataMap","center","zoom","criterion","dynamicRoute","DataTable","columns","pageSize","checkboxSelection","DataOptions","onChangeChartType","onDelete","onExport","TimeGenerator","ExportCSV","csvData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","Dashboard","setSensorData","setSelectedFile","objects","setObjects","displayedObjects","setDisplayedObjects","showModal","setShowModal","showUploadedData","setShowUploadedData","selectedObjectID","setSelectedObjectID","addToast","useToasts","saveFile","a","preventDefault","reader","FileReader","onload","result","appearance","autoDismiss","error","readAsText","files","extractedData","extractdata","chartLocation","chartSensor","chartTemp","chartDate","uploadedData","newDisplayedObjects","o","object","destroy","newGraph","addNewChart","addObject","newObject","ref","colors","legend","changeDataModal","field","headerName","myChartRef","current","getContext","Chart","labels","datasets","label","backgroundColor","options","display","text","fontColor","scales","yAxes","scaleLabel","labelString","xAxes","divActions","uploadFile","inputFile","lg","find","changeChartType","filteredObjects","filter","deleteChart","image","document","getElementById","toDataURL","replace","window","open","write","exportChart","values","cutLength","changeObjectData","changeAxeColor","changeText","Routes","_","exact","path","component","App","Container","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.18d62ca0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"uploadFile\":\"Dashboard_uploadFile__3rjW4\",\"inputFile\":\"Dashboard_inputFile__De29t\",\"divActions\":\"Dashboard_divActions__3dJVF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divModal\":\"DataModal_divModal__3CE_M\"};","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './Toolbar.module.css';\r\n\r\nconst Toolbar = (props) => {\r\n    return (\r\n        <Navbar expand=\"lg\" variant=\"light\">\r\n            <Navbar.Brand>Aplikace</Navbar.Brand>\r\n            <Link to={'/'}> Home </Link>\r\n            <Link to={'/login'}> Login </Link>\r\n            <Link to={'/about'}> About </Link>\r\n        </Navbar>\r\n    )\r\n\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport { Form, Button, Row } from 'react-bootstrap';\r\n\r\nconst LoginPage = (props) => {\r\n    return (\r\n        <Row className=\"justify-content-md-center\">\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </Row>\r\n    )\r\n\r\n}\r\n\r\nexport default LoginPage;","export const Resources = {\r\n    Routes: {\r\n\r\n    },\r\n    AddObjects: {\r\n        Graph: \"Přidat graf\",\r\n        Table: \"Přidat tabulku\",\r\n        Map: \"Přidat mapu\"\r\n    },\r\n    ObjectActions: {\r\n        Delete: \"Vymazat objekt\",\r\n        Export: \"Exportovat objekt\",\r\n        ChangeData: \"Změnit data\"\r\n    },\r\n    GraphItems: {\r\n        Options: \"Nastavení\",\r\n        Add: \"Přidat graf\",\r\n        Doughnut: \"Koláčový\",\r\n        Line: \"Liniový\",\r\n        Bar: \"Destičkový\",\r\n        ChangeData: \"Změnit data\",\r\n        Delete: \"Vymazat graf\",\r\n        Export: \"Exportovat graf\",\r\n        AddTitle: \"Přidat název\",\r\n        AddNote: \"Přidat popis\"\r\n    },\r\n    ModalItems: {\r\n        Title: \"Název\",\r\n        Note: \"Poznámka\",\r\n        SelectY: \"Vybrat data pro osu Y\",\r\n        SelectX: \"Vybrat data pro osu X\",\r\n        SelectColorY: \"Vybrat barvu pro osu Y\",\r\n        SelectColorX: \"Vybrat barvu pro osu X\",\r\n        CloseModal: \"Zavřít\",\r\n        Options: \"Nastavení grafu \"\r\n    },\r\n    Toaster: {\r\n        Success: \"JSON soubor byl nahrán\",\r\n        Error: \"Musíte nahrát JSON soubor\"\r\n    }\r\n}","export const SensorConstants = {\r\n    Values: {\r\n        tds_values: \"TDS [mg/l]\",\r\n        temp_values: \"Teplota [°C]\",\r\n        location_values: \"GPS\",\r\n        time_values: \"Čas [s]\",\r\n        id_values: \"ID\",\r\n        date_values: \"Datum\"\r\n    }\r\n}","export const ObjectConstants = {\r\n    Types: {\r\n        Graph: \"graph\",\r\n        Map: \"map\",\r\n        Table: \"table\"\r\n    },\r\n    Objects: {\r\n        Table: {\r\n            0: \"id\",\r\n            1: \"gps\",\r\n            2: \"tds\",\r\n            3: \"temp\",\r\n            4: \"time\"\r\n        },\r\n        TableHeader: {\r\n            0: \"ID\",\r\n            1: \"GPS\",\r\n            2: \"TDS\",\r\n            3: \"Teplota\",\r\n            4: \"Čas\"\r\n        }\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Resources } from '../../../Resources/Resources';\r\nimport { Row, Col, Dropdown, Button, Modal, InputGroup, FormControl, Accordion, Card, ListGroup } from 'react-bootstrap';\r\nimport { SensorConstants } from '../../Constants/SensorConstants';\r\nimport { ObjectConstants } from '../../Constants/ObjectConstants';\r\nimport ColorPicker from \"react-pick-color\";\r\nimport classes from './DataModal.module.css';\r\n\r\nexport const DataModal = (props) => {\r\n    let sensorData = props.data;\r\n    const [showDataindex, setShowDataindex] = React.useState(0);\r\n    const [dataCut, setDataCut] = React.useState(0);\r\n    \r\n    //Table options\r\n    const [deletePreviousData, setDeletePreviousData] = React.useState(true);\r\n    const [tableDataCount, setTableDataCount] = React.useState(0);\r\n\r\n    //Graph options\r\n    const [chosenAxes, setChosenAxes] = React.useState({x: null, y: null});\r\n\r\n    const mutateLocationData = (data) => {\r\n        let coords = [];\r\n\r\n        data.map(i => {\r\n            coords.push({\r\n                'lat': Number(i.slice(0, 9)),\r\n                'lng': Number(i.slice(10, 19))\r\n            })\r\n        })\r\n        console.log(coords);\r\n\r\n        return coords;\r\n    }\r\n\r\n    // React.useEffect(() => {\r\n    //     if ()\r\n\r\n    // }, [props.data])\r\n\r\n    const dataCutReminder = () => {\r\n        if (props.data !== undefined && props.data.length > 1) {\r\n            let dataLengths = [];\r\n            for (let i = 0; i < props.data.length; i++ ) {\r\n                dataLengths.push(props.data[i].date_values.length);\r\n            }\r\n            const min = Math.min(...dataLengths);\r\n            \r\n            return <h6>Nejmenší počet záznamů ve všech nahraných souborech: {min}</h6>\r\n        }\r\n    }\r\n\r\n    const mutateTableRows = () => {\r\n        if (props.selectedFile === null || props.selectedFile === undefined) return\r\n        let uploadedRows = [];\r\n        let startIndex = 0;\r\n\r\n        if (!deletePreviousData) {\r\n            props.objectData.rows.map(i => {\r\n                startIndex += 1;\r\n                uploadedRows.push({\r\n                    id: i.id,\r\n                    gps: i.gps,\r\n                    tds: i.tds,\r\n                    temp: i.temp,\r\n                    time: i.time\r\n                })\r\n            })\r\n        }\r\n        \r\n        props.selectedFile.map(i => {\r\n            startIndex += 1;\r\n            uploadedRows.push({\r\n                id: startIndex,\r\n                gps: i.GPS,\r\n                tds: i.TDS,\r\n                temp: i.TEMP,\r\n                time: i.DATE\r\n            })\r\n            \r\n        });\r\n\r\n        setTableDataCount(tableDataCount+1);\r\n        console.log(uploadedRows);\r\n        props.onDataChange(\"rows\", uploadedRows, dataCut);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (props.data !== undefined && props.data[showDataindex].date_values !== undefined) {\r\n            setDataCut(props.data[showDataindex].date_values.length);\r\n        }\r\n    }, [props.data])\r\n    \r\n    return (\r\n        <Modal className={classes.divModal} show={props.show}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{Resources.ModalItems.Options}{props.objectID+1}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        {sensorData[showDataindex] !== undefined ?\r\n            <div className=\"d-flex flex-wrap align-items-md-center border-bottom \">\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                        {sensorData[showDataindex] !== undefined && <>Data č.{showDataindex + 1} </>}\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                    \r\n                    {sensorData !== undefined && sensorData.map((i, index) => {\r\n                        return (\r\n                            <Dropdown.Item \r\n                                key={index}\r\n                                onClick={() => setShowDataindex(sensorData.indexOf(i))}\r\n                            > \r\n                            Data č. {index + 1}\r\n                            </Dropdown.Item>\r\n                        )\r\n                    })}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                <p className=\"m-0 p-0 w-50\">Počet záznamů vybranách dat: <strong>{sensorData[showDataindex].date_values.length}</strong></p>\r\n\r\n                <InputGroup className=\"w-50 mb-2\">\r\n                    <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"inputGroup-sizing-sm\">Oříznutí záznamů</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                        aria-label=\"Small\"\r\n                        aria-describedby=\"inputGroup-sizing-sm\"\r\n                        type=\"number\"\r\n                        value={dataCut}\r\n                        onChange={(e) => {\r\n                            if (e.target.value <= sensorData[showDataindex].date_values.length)\r\n                            setDataCut(e.target.value)\r\n                        }}\r\n                    />\r\n                </InputGroup>\r\n                {sensorData[showDataindex].date_values.length != dataCut && <h6>Záznamy budou oříznuty při opakoveném nahrání</h6> }\r\n                {sensorData[showDataindex].date_values.length != dataCut && dataCutReminder()}\r\n            </div>\r\n        : <h6>Nahrejte data</h6>\r\n        }\r\n        <br />\r\n\r\n        {/* Název objektu */}\r\n        <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"inputGroup-sizing-default\">{Resources.ModalItems.Title}</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n                aria-label=\"Default\"\r\n                aria-describedby=\"inputGroup-sizing-default\"\r\n                onChange={(e) => props.onTextChanged('title', e.target.value )}\r\n                value={props.objectData !== undefined && props.objectData.title}\r\n            />\r\n        </InputGroup>\r\n\r\n        {/* Poznámka k objektu */}\r\n        <InputGroup size=\"sm\" className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"inputGroup-sizing-sm\">{Resources.ModalItems.Note}</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl \r\n                aria-label=\"Small\" \r\n                aria-describedby=\"inputGroup-sizing-sm\" \r\n                onChange={(e) => props.onTextChanged('note', e.target.value )}\r\n                value={props.objectData !== undefined && props.objectData.note}\r\n            />\r\n        </InputGroup>\r\n\r\n        {/* ----------Polozky pro mapu----------- */}\r\n        {props.objectData !== undefined && props.objectData.objectType === ObjectConstants.Types.Map &&\r\n            <Dropdown>\r\n            <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                Vybrat souřadnice GPS\r\n            </Dropdown.Toggle>\r\n                {sensorData[showDataindex] !== undefined && \r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={()=> props.onDataChange(\"coords\", mutateLocationData(sensorData[showDataindex].location_values), dataCut )}>\r\n                        {sensorData[showDataindex].location_values}\r\n                    </Dropdown.Item>\r\n                    {/* <Dropdown.Item \r\n                        onClick={()=>mutateLocationData(sensorData[showDataindex].location_values)}>\r\n                            {sensorData[showDataindex].location_values}\r\n                    </Dropdown.Item> */}\r\n                    \r\n                </Dropdown.Menu>\r\n                }\r\n        </Dropdown>\r\n        }\r\n\r\n        <br />\r\n        {/* ----------Polozky pro graf----------- */}\r\n        {props.objectData.objectType === ObjectConstants.Types.Graph && <> \r\n            {/* Popis strany x */}\r\n            <InputGroup size=\"sm\" className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"inputGroup-sizing-sm\">Název osy X</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl \r\n                aria-label=\"Small\" \r\n                aria-describedby=\"inputGroup-sizing-sm\" \r\n                onChange={(e) => props.onTextChanged('xlabel', e.target.value )}\r\n                value={props.objectData !== undefined && props.objectData.xLabel}\r\n            />\r\n            </InputGroup>\r\n\r\n            {/* Data strany x */}\r\n            <Dropdown>\r\n                <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                    {props.objectData.data.x.length === 0 ? Resources.ModalItems.SelectX : `Data pro osu X: ${SensorConstants.Values[chosenAxes.x]}`}\r\n                   \r\n                </Dropdown.Toggle>\r\n                    {sensorData[showDataindex] !== undefined && \r\n                    <Dropdown.Menu>\r\n                        {Object.keys(sensorData[showDataindex]).map((i, index) => {\r\n                            return (\r\n                            <Dropdown.Item key={index} onClick={() => {\r\n                                props.onDataChange(\"X\", sensorData[showDataindex][i], dataCut)\r\n                                props.onTextChanged('xlabel', SensorConstants.Values[i])\r\n                                setChosenAxes((prevState) => ({...prevState, x: i}))\r\n                                }}>\r\n                                {SensorConstants.Values[i]}\r\n                            </Dropdown.Item>\r\n                            )\r\n                        })}\r\n                    </Dropdown.Menu>\r\n                    }\r\n            </Dropdown>\r\n            \r\n            {/* Vyber barvy pro X */}\r\n            <Dropdown>\r\n                <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                    {Resources.ModalItems.SelectColorX}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item >\r\n                    <ColorPicker color={\"#fff\"} onChange={(color) => props.onSetColor(color.hex)} />\r\n                    </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n             \r\n             <br />\r\n             {/* Popis strany Y */}\r\n             <InputGroup size=\"sm\" className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"inputGroup-sizing-sm\">Název osy Y</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl \r\n                aria-label=\"Small\" \r\n                aria-describedby=\"inputGroup-sizing-sm\" \r\n                onChange={(e) => props.onTextChanged('ylabel', e.target.value )}\r\n                value={props.objectData !== undefined && props.objectData.yLabel}\r\n            />\r\n            </InputGroup>\r\n            \r\n            {/* Data strany Y */}\r\n            <Dropdown>\r\n                <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                {props.objectData.data.y.length === 0 ? Resources.ModalItems.SelectY : `Data pro osu Y: ${SensorConstants.Values[chosenAxes.y]}`}\r\n                </Dropdown.Toggle>\r\n                {sensorData[showDataindex] !== undefined && \r\n                    <Dropdown.Menu>\r\n                        {Object.keys(sensorData[showDataindex]).map((i, index) => {\r\n                            return (\r\n                            <Dropdown.Item key={index} onClick={() => { \r\n                                props.onDataChange(\"Y\", sensorData[showDataindex][i], dataCut)\r\n                                props.onTextChanged('ylabel', SensorConstants.Values[i])\r\n                                setChosenAxes((prevState) => ({...prevState, y: i}))\r\n                                }}>\r\n                                {SensorConstants.Values[i]}\r\n                            </Dropdown.Item>\r\n                            )\r\n                        })}\r\n                    </Dropdown.Menu>\r\n                    }\r\n            </Dropdown>\r\n\r\n            {/* Vyber barvy pro Y */}\r\n            <Dropdown>\r\n                <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                    {Resources.ModalItems.SelectColorY}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item >\r\n                    <ColorPicker color={\"#fff\"} onChange={(color) => props.onSetColor(color.hex)} />\r\n                    </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </>}\r\n\r\n        {/* ----------Polozky pro tabulku----------- */}\r\n        {props.objectData.objectType === ObjectConstants.Types.Table && \r\n        <>  \r\n        <div className=\"form-check\" > \r\n            <label className=\"form-check-label\">\r\n                <input type=\"checkbox\" className=\"form-check-input\" onChange={()=> setDeletePreviousData(!deletePreviousData)} checked={deletePreviousData} /> \r\n                Smazat předchozí data\r\n            </label>\r\n        </div>\r\n        <Dropdown>\r\n            <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                Vybrat data pro řádky\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              \r\n            {sensorData[showDataindex] !== undefined && \r\n                \r\n                    <Dropdown.Item \r\n                        onClick={() => mutateTableRows()}\r\n                    > \r\n                    Aktuálně uložený soubor\r\n                    </Dropdown.Item>\r\n                \r\n            }\r\n               \r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n        \r\n        <h6>Počet vybraných souborů pro řádky: {tableDataCount}</h6>\r\n\r\n    </>}\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => props.onClose(true)}>\r\n            {Resources.ModalItems.CloseModal}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n}\r\n\r\n","\r\n\r\n\r\nexport const JSONConverter = (file) => {\r\n    let output = [];\r\n\r\n    let GPS_temp = '';\r\n    let TEMP_temp = 0;\r\n    let TDS_temp = 0;\r\n    let DATE_temp = '';\r\n    const numbers = '01234567890.'\r\n\r\n    for (let i = 0; i < file.length; i++) {\r\n        if (file[i] === 'G' && file[i+1] === 'P') {\r\n            GPS_temp = file.slice(i+5, i+35);\r\n\r\n            let index = 0;\r\n\r\n            for (let j = 0; j < 20; j++) {\r\n                if (numbers.includes(file[i+42+j])) {\r\n                    index = i+42+j;\r\n                } else break;\r\n            }\r\n\r\n            TEMP_temp = file.slice(i+42, index+1);\r\n\r\n           let index_TDS = 0;\r\n            for (let k = 0; k < 20; k++) {\r\n                \r\n                if (numbers.includes(file[index+6+k])) {\r\n                    index_TDS = index+5+k;\r\n                } else break;\r\n            }\r\n            TDS_temp = file.slice(index+6, index_TDS+2);\r\n            DATE_temp = file.slice(index_TDS+12, index_TDS+31);\r\n\r\n            output.push({\r\n                GPS: GPS_temp,\r\n                TEMP: TEMP_temp,\r\n                TDS: TDS_temp,\r\n                DATE: DATE_temp\r\n            });\r\n        }\r\n    }\r\n\r\n    console.log(output);\r\n    return output\r\n\r\n}\r\n\r\n//[{GPS:[306.201019,279.651031,674.400024],temp:23.125000,tds:0.000000,datetime:08-03-2021_08-52-35},{GPS","import * as React from \"react\";\r\nimport { Col, Dropdown, Button } from 'react-bootstrap';\r\nimport classes from './UploadedData.module.css';\r\n\r\nexport const UploadedData = (props) => {\r\n\r\n    const [showDataindex, setShowDataindex] = React.useState(0);\r\n    console.log(props.sensorData);\r\n\r\n    React.useEffect(() => {\r\n        console.log(showDataindex);\r\n    },[showDataindex])\r\n\r\n    const dataModifier = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <Col className=\"d-flex-column bg-light\" md={{ span: 12 }}>\r\n            <div className=\"d-flex align-items-md-center justify-content-start w-60\">\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                        Data č. {showDataindex + 1}\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                    \r\n                    {props.sensorData !== undefined && props.sensorData.map((i, index) => {\r\n                        return (\r\n                            <Dropdown.Item \r\n                                key={index}\r\n                                onClick={(index) => setShowDataindex(props.sensorData.indexOf(i))}\r\n                            > \r\n                            Data č. {index + 1}\r\n                            </Dropdown.Item>\r\n                        )\r\n                    })}\r\n                    \r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                <p className=\"m-0 p-0\">Celkový počet dat: <strong>{props.sensorData.length}</strong></p>\r\n                <p className=\"m-0 p-0\">Počet záznamů vybranách dat: <strong>{props.sensorData[showDataindex].date_values.length}</strong></p>\r\n                <p className=\"m-0 p-0\">Datum:<strong>{props.sensorData[showDataindex].date_values[0].slice(0, 10)}</strong></p>\r\n                <p className=\"m-0 p-0\">Počátek měření: <strong>{props.sensorData[showDataindex].date_values[0].slice(11)}</strong></p>\r\n            </div>        \r\n            \r\n\r\n            {props.sensorData[showDataindex] !== undefined &&\r\n            <div className={classes.divData}>\r\n                        <div className={classes.divItem}>\r\n                            <h6>GPS:</h6>\r\n                            {props.sensorData[showDataindex].location_values.map((gps, index) => <p key={index}>{gps}</p>)}\r\n                        </div>\r\n                        <div className={classes.divItem}>\r\n                            <h6>TDS:</h6>\r\n                            {props.sensorData[showDataindex].tds_values.map((tds, index) => <p key={index}>{tds}</p> )}\r\n                        </div>\r\n                        <div className={classes.divItem}>\r\n                            <h6>Teplota:</h6>\r\n                            {props.sensorData[showDataindex].temp_values.map((temp, index) => <p key={index}>{temp}</p> )}\r\n                        </div>\r\n            </div>\r\n            } \r\n         </Col>\r\n    )\r\n}","import { Map, PathLayer, Path } from 'react-mapycz'\r\n\r\nexport const DataMap = (props) => {\r\n    console.log(props.coords);\r\n    return (\r\n        <Map center={props.coords !== undefined ? props.coords[0]:[]} zoom={12}>\r\n            <PathLayer>\r\n                <Path\r\n                    coords={props.coords !== undefined ? props.coords : []}\r\n                    criterion=\"fast\"\r\n                    dynamicRoute={true}\r\n                />\r\n            </PathLayer>\r\n        </Map>\r\n    )\r\n}","import { DataGrid } from '@material-ui/data-grid';\r\n\r\nexport const DataTable = (props) => {\r\n    console.log(props.rows);\r\n    return (\r\n        <DataGrid rows={props.rows} columns={props.columns} pageSize={99} checkboxSelection />\r\n    )\r\n}","import { Row, Col, Dropdown, Button, Modal } from 'react-bootstrap';\r\nimport { Resources } from '../../../Resources/Resources';\r\n\r\nexport const DataOptions = (props) => {\r\n    return (\r\n        <Dropdown className=\"m-1\">\r\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                {Resources.GraphItems.Options}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n                {props.objectType === 'graph' && <Dropdown.Item onClick={()=>props.onChangeChartType(\"doughnut\")}>{Resources.GraphItems.Doughnut}</Dropdown.Item>}\r\n                {props.objectType === 'graph' && <Dropdown.Item onClick={()=>props.onChangeChartType(\"line\")}>{Resources.GraphItems.Line}</Dropdown.Item>}\r\n                {props.objectType === 'graph' && <Dropdown.Item onClick={()=>props.onChangeChartType(\"bar\")}>{Resources.GraphItems.Bar}</Dropdown.Item>}\r\n\r\n                <Dropdown.Item onClick={()=>props.onDelete()}>{Resources.ObjectActions.Delete}</Dropdown.Item>\r\n                <Dropdown.Item onClick={()=>props.onDataChange()}>{Resources.ObjectActions.ChangeData}</Dropdown.Item>\r\n                <Dropdown.Item onClick={()=>props.onExport()}>{Resources.ObjectActions.Export}</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n\r\n    )\r\n}","//Arduino saves data every 5s\r\n\r\nexport const TimeGenerator = (length) => {\r\n    let time_values = [0];\r\n    for (let i = 0; i < length; i++) {\r\n        time_values.push(time_values[i]+5);\r\n    }\r\n    return time_values;\r\n}","import React from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport const ExportCSV = ({csvData, fileName}) => {\r\n\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n\r\n    const exportToCSV = (csvData, fileName) => {\r\n        const ws = XLSX.utils.json_to_sheet(csvData);\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const data = new Blob([excelBuffer], {type: fileType});\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n    }\r\n\r\n    return (\r\n        <Button variant=\"warning\" onClick={(e) => exportToCSV(csvData,fileName)}>Export XLSX nahraného souboru</Button>\r\n    )\r\n}","import * as React from \"react\";\r\nimport { Row, Col, Dropdown, Button, Modal } from 'react-bootstrap';\r\nimport { Resources } from '../../Resources/Resources';\r\nimport Chart from \"chart.js\";\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { ValidateJSON } from '../UI/ValidateJSON';\r\nimport { DataModal } from './DataModal/DataModal';\r\nimport { JSONConverter } from './JSONConverter';\r\nimport { UploadedData } from './UploadedData/UploadedData';\r\nimport { DataMap } from './DataMap/DataMap';\r\nimport { DataTable } from './DataTable/DataTable';\r\nimport { DataOptions } from './DataOptions/DataOptions';\r\nimport { TimeGenerator } from './TimeGenerator';\r\nimport { ObjectConstants } from '../../Components/Constants/ObjectConstants';\r\nimport { SensorConstants } from '../../Components/Constants/SensorConstants';\r\nimport { ExportCSV } from './ExportCSV/ExportCSV';\r\nimport classes from './Dashboard.module.css';\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    const [sensorData, setSensorData] = React.useState([]); //transformed data from JSON\r\n    const [selectedFile, setSelectedFile] = React.useState(null); \r\n    const [objects, setObjects] = React.useState([]); //options and data origin for charts/tables/map\r\n    const [displayedObjects, setDisplayedObjects] = React.useState([]); //object instances, refs\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const [showUploadedData, setShowUploadedData] = React.useState(false);\r\n    const [selectedObjectID, setSelectedObjectID] = React.useState(null);\r\n\r\n    const { addToast } = useToasts()\r\n\r\n    const saveFile = async (e) => {\r\n        e.preventDefault()\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (e) => {\r\n            try {\r\n               // const JSON5 = require('json5');\r\n                //console.log(correctJson);\r\n                setSelectedFile(JSONConverter(e.target.result));\r\n                addToast(Resources.Toaster.Success, {\r\n                    appearance: 'success',\r\n                    autoDismiss: false,\r\n                  })\r\n            } catch (error) {\r\n                console.log(error);\r\n                addToast(Resources.Toaster.Error, {\r\n                    appearance: 'error',\r\n                    autoDismiss: false,\r\n                  })\r\n            }\r\n        }\r\n\r\n        reader.readAsText(e.target.files[0])\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (selectedFile === null || selectedFile === undefined) return;\r\n        let extractedData = extractdata(selectedFile);\r\n\r\n        if (sensorData.length === 0) {\r\n            setSensorData([{\r\n                location_values: extractedData.chartLocation,\r\n                tds_values: extractedData.chartSensor,\r\n                temp_values: extractedData.chartTemp,\r\n                time_values: TimeGenerator(selectedFile.length),\r\n                date_values: extractedData.chartDate\r\n            }]);\r\n        } else {\r\n\r\n            let uploadedData = [];\r\n            sensorData.map(i => {\r\n                uploadedData.push({\r\n                    location_values: i.location_values,\r\n                    tds_values: i.tds_values,\r\n                    temp_values: i.temp_values,\r\n                    time_values: TimeGenerator(selectedFile.length),\r\n                    date_values: i.date_values\r\n                })\r\n            });\r\n            uploadedData.push({\r\n                location_values: extractedData.chartLocation,\r\n                tds_values: extractedData.chartSensor,\r\n                temp_values: extractedData.chartTemp,\r\n                time_values: TimeGenerator(selectedFile.length),\r\n                date_values: extractedData.chartDate\r\n            })\r\n            console.log(uploadedData);\r\n            setSensorData(uploadedData);\r\n\r\n        }\r\n    }, [selectedFile])\r\n\r\n    const extractdata = (data) => {\r\n        let chartLocation = [];\r\n        let chartSensor = [];\r\n        let chartTemp = [];\r\n        let chartDate = [];\r\n        data.map(i => {\r\n            chartLocation.push(i.GPS);\r\n            chartSensor.push(i.TDS);\r\n            chartTemp.push(i.TEMP);\r\n            chartDate.push(i.DATE);\r\n        })\r\n        return {chartLocation, chartSensor, chartTemp, chartDate};\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (objects.length === 0) return;\r\n\r\n        const newDisplayedObjects = [];\r\n        displayedObjects.map(o => {\r\n            o.object.destroy();\r\n        });\r\n        objects.map(o => {\r\n            if (o.objectType === ObjectConstants.Types.Graph) {\r\n                let newGraph = addNewChart(o);  \r\n                newDisplayedObjects.push(newGraph);\r\n            }\r\n        });\r\n        setDisplayedObjects([...newDisplayedObjects]);\r\n\r\n    }, [objects]);\r\n\r\n    //TYPE = \"graph\" || \"table\" || \"map\"\r\n    const addObject = (type) => {\r\n        let newObject = {};\r\n\r\n        if (type === ObjectConstants.Types.Graph) {\r\n            newObject = {\r\n                objectType: ObjectConstants.Types.Graph,\r\n                id : objects.length,\r\n                ref : React.createRef(),\r\n                type: \"line\",\r\n                data: {\r\n                    x: [],\r\n                    y: []\r\n                },\r\n                colors: {\r\n                    x: 'rgba(75,192,192, 0.4)',\r\n                    y: 'rgba(75,192,192, 0.4)'\r\n                },\r\n                title: '',\r\n                note: '',\r\n                legend: '',\r\n                xLabel: '',\r\n                yLabel: ''\r\n            };\r\n        }\r\n\r\n        if (type === ObjectConstants.Types.Map) {\r\n            newObject = {\r\n                objectType: ObjectConstants.Types.Map,\r\n                id : objects.length,\r\n                coords: [],\r\n                title: '',\r\n                note: '',\r\n            }\r\n            changeDataModal(newObject.id);\r\n        }\r\n\r\n        if (type === ObjectConstants.Types.Table) {\r\n            newObject = {\r\n                objectType: ObjectConstants.Types.Table,\r\n                id : objects.length,\r\n                columns: [\r\n                    {field: 'id', headerName: SensorConstants.Values.id_values},\r\n                    {field: 'gps', headerName: SensorConstants.Values.location_values},\r\n                    {field: 'tds', headerName: SensorConstants.Values.tds_values},\r\n                    {field: 'temp', headerName: SensorConstants.Values.temp_values},\r\n                    {field: 'time', headerName: SensorConstants.Values.time_values},\r\n                ],\r\n                rows: [\r\n                    { id: 1, gps: 'Snow', tds: 'Jon', temp: 35, time: 20 },\r\n                ]                \r\n            }\r\n        }\r\n        setObjects([...objects, newObject]);\r\n        //CALL USE-EFFECT ONCHANGE OBJECTS -> addNewChart\r\n    }\r\n\r\n    const addNewChart = (object) => {\r\n        let myChartRef = object.ref.current.getContext(\"2d\");\r\n        // console.log(object);\r\n\r\n        return {\r\n            ref: myChartRef,\r\n            id: object.id,\r\n            object: new Chart(myChartRef, {\r\n                type: object.type,\r\n                data: {\r\n                    labels: [...object.data.x],\r\n                    datasets: [\r\n                        {\r\n                            label: \"TDS\",\r\n                            data: [...object.data.y],\r\n                            backgroundColor: [\r\n                                object.colors.y\r\n                               ],\r\n                        }\r\n                    ]\r\n                },\r\n                options: {\r\n                    title: {\r\n                        display: true,\r\n                        text: object.title\r\n                    },\r\n                    legend: {\r\n                        display: true,\r\n                        labels: {\r\n                            fontColor: 'rgb(255, 99, 132)'\r\n                        }\r\n                    },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: object.yLabel\r\n                            }\r\n                        }],\r\n                        xAxes: [{\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: object.xLabel\r\n                            }\r\n                        }]\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const changeChartType = (id, type) => {\r\n        const object = objects.find(x => x.id === id);\r\n        object.type = type;\r\n        setObjects([...objects]);\r\n    }\r\n\r\n    const deleteChart = (id) => {\r\n        const filteredObjects = objects.filter(x => x.id !== id);\r\n        setObjects([...filteredObjects]);\r\n    }\r\n\r\n    const changeDataModal = (id) => {\r\n        setSelectedObjectID(id);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const changeObjectData = (type, values, cutLength) => {\r\n        let object = objects.find(x => x.id === selectedObjectID);\r\n        if (values.length != cutLength && cutLength < values.length) {\r\n            console.log(\"CUTTING LENGTH TO:\")\r\n            console.log(cutLength);\r\n            values = values.slice(0, cutLength);\r\n            console.log(\"LENGTH OF CUTTED VALUES:\");\r\n            console.log(values.length);\r\n        }\r\n        if (type === \"X\") {\r\n            object.data.x = values;\r\n        } \r\n        if (type === \"Y\") {\r\n            object.data.y = values;\r\n        }\r\n        if (type === \"coords\") {\r\n            object.coords = values;\r\n        }\r\n        if (type === \"rows\") {\r\n            object.rows = values;\r\n        }\r\n        setObjects([...objects]);\r\n    }\r\n\r\n    const changeAxeColor = (hex) => {\r\n        let object = objects.find(x => x.id === selectedObjectID);\r\n        object.colors.y = hex;\r\n        setObjects([...objects]);\r\n    }\r\n\r\n    const changeText = (type, text) => {\r\n        let object = objects.find(x => x.id === selectedObjectID);\r\n\r\n        if (type === 'title') {\r\n            object.title = text;\r\n        } \r\n        if (type === 'note') {\r\n            object.note = text;\r\n        }\r\n        if (type === 'xlabel') {\r\n            object.xLabel = text;\r\n        }\r\n        if (type === 'ylabel') {\r\n            object.yLabel = text;\r\n        }\r\n\r\n        setObjects([...objects]);\r\n    }\r\n\r\n    const exportChart = (id, objectType) => {\r\n\r\n        if (objectType !== ObjectConstants.Types.Graph) return;\r\n\r\n        let canvas = document.getElementById(id);\r\n        let image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\r\n       \r\n        let w=window.open('about:blank','image from canvas');\r\n        w.document.write(\"<img src='\"+image+\"' alt='from canvas'/>\");\r\n    }\r\n\r\n    return (\r\n        <Row className=\"justify-content-md-center\">\r\n            <Col className=\"d-flex justify-content-md-center\" md={{ span: 12}}>\r\n                <h1>Dashboard</h1>\r\n            </Col>\r\n            \r\n            {sensorData.length !== 0 && <h4> Počet nahraných dat: {sensorData.length}</h4>}\r\n            <Col className=\"d-flex justify-content-md-center\" md={{ span: 12}}>\r\n                \r\n                <div className={classes.divActions}>\r\n                    <label className={classes.uploadFile}>\r\n                        <input\r\n                            type=\"file\"\r\n                            onChange={(e) => saveFile(e)}\r\n                            className={classes.inputFile}\r\n                        />\r\n                        {sensorData.length === 0 ? 'Nahrát soubor' : 'Nahrát další soubor'}\r\n                    </label>\r\n\r\n                    <Dropdown className=\"m-1\">\r\n                        <Dropdown.Toggle variant=\"secondary\">\r\n                            Přidat objekt\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={()=>addObject(ObjectConstants.Types.Graph)}>{Resources.AddObjects.Graph}</Dropdown.Item>\r\n                            <Dropdown.Item onClick={()=>addObject(ObjectConstants.Types.Table)}>{Resources.AddObjects.Table}</Dropdown.Item>\r\n                            <Dropdown.Item onClick={()=>addObject(ObjectConstants.Types.Map)}>{Resources.AddObjects.Map}</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    {sensorData.length !== 0 && \r\n                        <Button className=\"m-1\" onClick={() => setShowUploadedData(!showUploadedData)}> \r\n                            {!showUploadedData ? 'Zobrazit nahraná data' : 'Skrýt nahraná data'}\r\n                        </Button>\r\n                    }\r\n                    {sensorData.length !== 0 && <ExportCSV csvData={selectedFile} fileName={selectedFile[0].DATE} />}\r\n                </div>\r\n            </Col>\r\n\r\n           {showUploadedData && \r\n            <UploadedData  \r\n                sensorData={sensorData} \r\n                selectedFile={selectedFile}\r\n            />\r\n           }\r\n\r\n            {objects.map(o => {\r\n                return (\r\n                    <Col className=\"mt-5\" lg=\"6\" id={\"col\"+o.id} key={o.id}>\r\n                        <DataOptions\r\n                            objectType={o.objectType} \r\n                            onChangeChartType={(type) => changeChartType(o.id, type)}\r\n                            onDelete={() => deleteChart(o.id)}\r\n                            onExport={() => exportChart(o.id, o.objectType)}\r\n                            onDataChange={() => changeDataModal(o.id)}\r\n                        />\r\n                        \r\n\r\n                        {o.objectType === ObjectConstants.Types.Graph && <canvas id={o.id} ref={o.ref} /> }\r\n                        \r\n                        {o.objectType === ObjectConstants.Types.Map && o.coords.length !== 0 ?\r\n                         <div>\r\n                            <h6>{o.title}</h6>\r\n                            <DataMap \r\n                                coords={o.coords}\r\n                            />\r\n                            <h6>{o.note}</h6>\r\n                        </div> : o.objectType === ObjectConstants.Types.Map && o.coords.length === 0  && <h6>Přidejte data pro mapu</h6>\r\n                        }\r\n                        {o.objectType === ObjectConstants.Types.Table && \r\n                            <DataTable\r\n                                id={o.id}\r\n                                rows={o.rows}\r\n                                columns={o.columns} \r\n                            />\r\n                        }\r\n\r\n                    </Col>\r\n                )\r\n            })}\r\n\r\n            {objects.length !== 0 && selectedObjectID !== \"\" && objects[selectedObjectID] !== undefined && \r\n            <DataModal \r\n                show={showModal} \r\n                objectID={selectedObjectID !== null ? selectedObjectID : \"\"}\r\n                onDataChange={(type, values, cutLength) => changeObjectData(type, values, cutLength)} \r\n                onClose={()=>setShowModal(false)}\r\n                onSetColor={(hex) => changeAxeColor(hex)}\r\n                onTextChanged={(type, note) => changeText(type, note)}\r\n                objectData={objects.find(x => x.id === selectedObjectID)}\r\n                data={sensorData} \r\n                selectedFile={selectedFile}\r\n                />\r\n                }\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import * as React from \"react\";\r\nimport LoginPage from \"../Components/Login/LoginPage\";\r\nimport Dashboard from \"../Components/Dashboard/Dashboard\";\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nconst Routes = _ => {\r\n//   const { t } = useResource();\r\n//   const login = `/${t(Resources.Routes.Login)}`;\r\n//   const products = `/${t(Resources.Routes.Products)}`;¨\r\n\r\n  return (\r\n      <Switch>\r\n        <Route exact path='/' component={Dashboard} />\r\n        <Route path=\"/login\">\r\n          <LoginPage />\r\n        </Route>\r\n      </Switch>\r\n  );\r\n};\r\n\r\nexport { Routes };\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Container } from 'react-bootstrap';\nimport Toolbar from './Components/Toolbar/Toolbar';\nimport { Routes } from \"./Routes/Routes\";\nimport { ToastProvider } from 'react-toast-notifications'\n\nfunction App() {\n  return (\n    <ToastProvider>\n      <Container fluid>\n        <Toolbar></Toolbar>\n        <Routes />\n      </Container>\n    </ToastProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  \n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divData\":\"UploadedData_divData__ZJcyx\",\"divItem\":\"UploadedData_divItem__2nEXp\"};"],"sourceRoot":""}